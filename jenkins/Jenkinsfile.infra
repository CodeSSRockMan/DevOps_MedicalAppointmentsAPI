pipeline {
    agent any

    environment {
        TF_DIR = 'terraform'
        PLAN_OUT = 'tfplan.out'
        PLAN_SUMMARY = 'tfplan-summary.txt'
    }

    options {
        timestamps()
    }

    stages {

        stage('Cleanup Before Checkout') {
            steps {
                deleteDir()
            }
        }

        stage('Checkout') {
            steps {
                echo "[INFO] Checking out repository..."
                checkout scm
            }
        }

        stage('Terraform Init') {
            steps {
                withCredentials([
                    [$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credentials'],
                    [$class: 'StringBinding', credentialsId: 'terraform-cloud-token', variable: 'TERRAFORM_CLOUD_TOKEN']
                ]) {
                    dir("${TF_DIR}") {
                        echo "[DEBUG] Initializing Terraform..."
                        sh '''
                          echo '{ "credentials": { "app.terraform.io": { "token": "'$TERRAFORM_CLOUD_TOKEN'" } } }' > .terraformrc
                          export TF_CLI_CONFIG_FILE=.terraformrc
                          terraform init -input=false
                        '''
                    }
                }
            }
        }

        stage('Terraform Validate & Format') {
            steps {
                dir("${TF_DIR}") {
                    echo "[DEBUG] Formatting and validating Terraform code..."
                    sh 'terraform fmt -check'
                    sh 'terraform validate'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                withCredentials([
                    [$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credentials'],
                    [$class: 'StringBinding', credentialsId: 'terraform-cloud-token', variable: 'TERRAFORM_CLOUD_TOKEN']
                ]) {
                    dir("${TF_DIR}") {
                        echo "[DEBUG] Running Terraform plan..."
                        sh '''
                          echo '{ "credentials": { "app.terraform.io": { "token": "'$TERRAFORM_CLOUD_TOKEN'" } } }' > .terraformrc
                          export TF_CLI_CONFIG_FILE=.terraformrc
                          terraform plan -out=${PLAN_OUT} -input=false -var-file=terraform.tfvars -lock=false -no-color

                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            echo "[SUCCESS] Terraform plan pipeline completed successfully."
        }
        failure {
            echo "[FAILURE] Terraform plan pipeline failed. See logs for details."
        }
        always {
            echo "[FINAL] Pipeline finished with status: ${currentBuild.result}"
            cleanWs()
        }
    }
}
